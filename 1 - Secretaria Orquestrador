{
  "name": "1. Secretária",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8ca54eae-15d1-49d3-af33-7a6e5d17b833",
              "leftValue": "={{ $json.tipo }}",
              "rightValue": "incoming",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "82912d66-ee4b-439c-9d55-96090bc6ba62",
              "leftValue": "={{ $json.etiquetas }}",
              "rightValue": "agente-off",
              "operator": {
                "type": "array",
                "operation": "notContains",
                "rightType": "any"
              }
            },
            {
              "id": "cf87bb7e-6bea-4697-bcd9-57e3b63998c2",
              "leftValue": "={{ $json.etiquetas }}",
              "rightValue": "testando-agente",
              "operator": {
                "type": "array",
                "operation": "contains",
                "rightType": "any"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        2688,
        640
      ],
      "id": "8fac7b46-3061-44ee-832c-769175108f8d",
      "name": "Mensagem chegando?"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "hustoo-alavanca",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        2192,
        640
      ],
      "id": "81438189-4440-4cfb-bace-29baff303967",
      "name": "Mensagem recebida",
      "webhookId": "f6ddc488-8680-4351-84dd-d9e73b2d102d"
    },
    {
      "parameters": {
        "jsCode": "const ultima_mensagem_da_fila = $input.last()\nconst mensagem_do_workflow = $('Info').first()\n\nif (ultima_mensagem_da_fila.json.id_mensagem !== mensagem_do_workflow.json.id_mensagem) {\n  // Mensagem encavalada, para o workflow\n  return [];\n}\n\n// Pass-through da fila de mensagens\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3872,
        640
      ],
      "id": "524b054c-c9c5-43b2-880e-f4984a028966",
      "name": "Mensagem encavalada?"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_fila_mensagens",
          "mode": "list"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "telefone",
              "value": "={{ $('Info').item.json.telefone }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3648,
        640
      ],
      "id": "5b5f093c-e839-4f31-9cec-11486580c07c",
      "name": "Buscar mensagens",
      "credentials": {
        "postgres": {
          "id": "fQxZKNqN5RfcllgD",
          "name": "Postgres AutomatizaAi"
        }
      }
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_fila_mensagens",
          "mode": "list"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "telefone",
              "value": "={{ $json.telefone }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        4080,
        640
      ],
      "id": "4423b008-5ea2-4484-becb-833a3d2e3c08",
      "name": "Limpar fila de mensagens",
      "credentials": {
        "postgres": {
          "id": "fQxZKNqN5RfcllgD",
          "name": "Postgres AutomatizaAi"
        }
      }
    },
    {
      "parameters": {
        "content": "# Processando mensagens encavaladas\n\nEssa etapa trata a situação em que o usuário envia múltiplas mensagens seguidas. O ponto negativo é o aumento no tempo de resposta do agente. Lógica dispensa uso de soluções mais complexas, como RabbitMQ.\n\nTempo de espera recomendado de ~16s. Quando estiver testando, recomendamos reduzir um pouco para ficar mais rápido de testar.\n",
        "height": 540,
        "width": 1080,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3136,
        448
      ],
      "id": "148b9c2a-8d6c-4fc3-9b50-93270b0381e0",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3440,
        640
      ],
      "id": "04263b86-5a48-4e25-bbad-2ffcc6a5e518",
      "name": "Esperar",
      "webhookId": "689b51a0-89fe-459d-a560-a59c79797611"
    },
    {
      "parameters": {
        "content": "# Gerando resposta",
        "height": 540,
        "width": 2080,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4912,
        448
      ],
      "id": "8c9e453b-ffb2-465a-b678-6dd6720a5898",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# Enviando resposta",
        "height": 540,
        "width": 1776,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6992,
        448
      ],
      "id": "0aae9d8b-20ae-4ae3-b6d2-efb8a7e0d436",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# Tratando input\n",
        "height": 540,
        "width": 1060
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2048,
        448
      ],
      "id": "6d9016cb-98f0-4d67-80f7-2122d05b9117",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Info').item.json.mensagem }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "id": "1382cd26-d96e-4c55-99dd-2ca305ffe82e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b9a7e16f-b6e4-45d7-846d-92dcb3117593",
                    "leftValue": "={{ $('Info').item.json.mensagem_de_audio }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Áudio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2960,
        640
      ],
      "id": "8de188d6-6669-4ccb-b809-52570ad4308c",
      "name": "Tipo de mensagem"
    },
    {
      "parameters": {
        "content": "# Processando áudio",
        "height": 420,
        "width": 1080,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3152,
        1024
      ],
      "id": "eaa03ef2-a420-4b61-abf2-9d90a967529f",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "Para testar, recomendamos criar uma tag \"testando-agente\" e usar no número que enviará as mensagens para a secretária durante os testes.\n\nVocê pode marcar o seu número no Chatwoot com essa tag para que o agente responda apenas você.\n\nDepois de testar e validar, só remover a regra do filtro pro seu agente responder todo mundo.\n\n",
        "height": 180,
        "width": 600,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2496,
        800
      ],
      "id": "7dabb396-41eb-4830-bb9f-ce9ad68b0072",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "sseEndpoint": "https://n8n.autoia.store/mcp/db6bc79d-ba32-41c4-b492-f0f5bbcb8fd3/sse",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        5728,
        848
      ],
      "id": "c6ad551a-30ec-4750-a263-ff2d36afd288",
      "name": "MCP Google Calendar"
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "returnAll": true,
        "filter": {
          "driveId": {
            "mode": "list",
            "value": "My Drive"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTool",
      "typeVersion": 3,
      "position": [
        5856,
        848
      ],
      "id": "c73eb7ba-97c1-44a2-9192-677a8f99f22c",
      "name": "Listar arquivos",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "z0kYms3IIDQWAD2S",
          "name": "Google Drive Nando"
        }
      }
    },
    {
      "parameters": {
        "description": "Use essa ferramenta para baixar um arquivo do Google Drive e enviá-lo para o usuário.\n",
        "workflowId": {
          "__rl": true,
          "value": "1FDsLuMhEARFPWfq",
          "mode": "list",
          "cachedResultName": "3 - Baixar e enviar arquivos do Google Drive"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "file_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('file_id', ``, 'string') }}",
            "id_conta": "={{ $('Info').item.json.id_conta }}",
            "id_conversa": "={{ $('Info').item.json.id_conversa }}",
            "url_chatwoot": "={{ $('Info').item.json.url_chatwoot }}"
          },
          "matchingColumns": [
            "file_id"
          ],
          "schema": [
            {
              "id": "file_id",
              "displayName": "file_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "id_conta",
              "displayName": "id_conta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "id_conversa",
              "displayName": "id_conversa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "url_chatwoot",
              "displayName": "url_chatwoot",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        6000,
        848
      ],
      "id": "83a16045-4112-407c-94d8-d94ff7a09035",
      "name": "Baixar e enviar arquivo"
    },
    {
      "parameters": {
        "content": "## Pré-requisitos do workflow\n",
        "height": 1520,
        "width": 2140,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -144,
        176
      ],
      "id": "0b393c09-d3bb-4cbe-8d04-9182a5920199",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "# Marcar como lida e \"digitando...\"",
        "height": 540,
        "width": 660,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4240,
        448
      ],
      "id": "343e0af6-e8cb-434a-9880-6bd9969c72aa",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 8 * * 1-5"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        7152,
        1376
      ],
      "id": "34c4ab16-e5af-4959-a761-8f2e6fe72297",
      "name": "Gatilho diário"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Agora são {{ $now.format('FFFF') }}.",
        "options": {
          "systemMessage": "=Agora são {{ $now.format('FFFF') }}.\n\nVocê é um agente especializado em **confirmação de consultas** para a clínica. Sua função principal é:\n\n1. **Listar os eventos** agendados para o próximo dia no Google Calendar.\n2. **Obter o telefone** na descrição de cada evento.\n3. **Obter o ID da conversa** na descrição de cada evento.\n4. **Enviar uma mensagem de confirmação** usando a ferramenta \"Enviar_agendamento\", perguntando se o paciente confirma a consulta ou prefere reagendar.\n5. **Inclua na mensagem**:\n  - Nome do paciente\n  - Nome do profissional\n  - Data e hora da consulta\n\n**NÃO INCLUA O ID DA CONVERSA NA MENSAGEM**\n\n## IMPORTANTE\n- Você **não recebe respostas** diretamente; o retorno do paciente é tratado por outro agente.\n- Use a ferramenta \"Refletir1\" antes e depois de realizar operações complexas, para ter certeza de que deu tudo certo.\n- SEMPRE QUE ENVIAR UMA MENSAGEM PARA O PACIENTE, **USE A FERRAMENTA \"Salvar_memoria\"**. ISSO É MUITO IMPORTANTE, NÃO FAÇA ERRADO POR FAVOR.\n\n\n## PROFISSIONAIS E ESPECIALIDADES\n\nSegue o nome dos profissionais, suas especialidades, e o ID da agenda que deve ser usado nas ferramentas Google Calendar\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        7792,
        1376
      ],
      "id": "f2d8ecc6-a4d9-42d8-a773-c4fed840127c",
      "name": "Assistente de confirmação",
      "retryOnFail": true
    },
    {
      "parameters": {
        "content": "# Assistente de confirmação de agendamentos \n",
        "height": 600,
        "width": 1200,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7040,
        1216
      ],
      "id": "0016fda5-f643-4635-822c-edc0785fdab9",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensagem || $json.mensagem_audio }}",
        "options": {
          "systemMessage": "=HOJE É: {{ $now.format('FFFF') }}\nTELEFONE DO CONTATO: {{ $('Info').item.json.telefone }}\nID DA CONVERSA: {{ $('Info').item.json.id_conversa }}\n\n## INSTRUÇÃO IMPORTANTE\n- Ao criar ou editar qualquer evento no Google Calendar, incluir sempre o telefone do usuário na descrição do agendamento, juntamente com o nome completo, e quaisquer outras informações relevantes fornecidas pelo paciente.\n\n-----------------------\n\n## PAPEL\n\nVocê é uma atendente do WhatsApp, altamente especializada, que atua em nome da Alavanca AI, prestando um serviço de excelência. Sua missão é atender aos pacientes de maneira ágil e eficiente, respondendo dúvidas e auxiliando em agendamentos, cancelamentos ou remarcações de reuniões.\n\n## PERSONALIDADE E TOM DE VOZ\n\n- Simpática, prestativa e humana\n- Tom de voz sempre simpático, acolhedor e respeitoso\n\n## OBJETIVO\n\n1. Fornecer atendimento diferenciado aos usuários.\n2. Responder dúvidas sobre a Alavanca Ai (especialidade, horários, localização, formas de pagamento).\n3. Agendar, remarcar e cancelar reuniões de forma simples e eficaz.\n4. Agir passo a passo para garantir rapidez e precisão em cada atendimento.\n\n## CONTEXTO\n\n- Você otimiza o fluxo interno da Alavanca AI, provendo informações e reduzindo a carga no suporte da empresa Alavanca AI..\n- Seu desempenho impacta diretamente a satisfação do usuário e a eficiência.\n-----------------------\n\n## SOP (Procedimento Operacional Padrão)\n\n1. Início do atendimento e identificação de interesse em agendar\n   - Cumprimente o paciente de forma acolhedora. \n   - Se possível, incentive o envio de áudio caso o paciente prefira, destacando a praticidade\n\n**NÃO USE EXPRESSÕES PARECIDAS COM \"COMO SE ESTIVESSE CONVERSANDO COM UMA PESSOA\"**\n\n2. Solicitar dados do usuário\n   - Peça nome completo e email.\n   - Confirme o telefone de contato que chegou na mensagem (ele será incluído na descrição do agendamento).\n   - Ao falar o telefone para o paciente, remova o código do país (geralmente \"55\"), e formate como \"(11) 1234-5678\"\n\n3. Identificar necessidade\n   - Pergunte a data de preferência para a reunião e se o paciente tem preferência por algum turno (manhã ou tarde).\n\n4. Verificar disponibilidade\n   - Use a ferramenta \"Buscar_eventos\" apenas após ter todos os dados necessários do usuário.\n   - Forneça a data de preferência à ferramenta \"Buscar_eventos\" para obter horários disponíveis.\n\n5. Informar disponibilidade\n   - Retorne ao usuário com os horários livres encontrados para a data solicitada.\n\n6. Coletar informações adicionais\n   - Se o paciente fornecer dados extras, inclua tudo na descrição do evento no Google Calendar.\n\n7. Agendar consulta\n   - Após confirmação do usuário\n     - Use a ferramenta \"Criar_evento\" para criar o evento, passando:\n       - Nome completo\n       - Data de nascimento\n       - Telefone de contato (use o número igual na entrada, exemplo: \"551112345678\")\n       - Data e hora escolhidas\n       - ID da conversa (número para controle interno, **ESSE NÚMERO É ESSENCIAL, NÃO SE ESQUEÇA DE INCLUÍ-LO!!**)\n     - Nunca agende datas ou horários passados, ou com conflitos.\n\n8. Confirmar agendamento\n   - Espere o retorno de sucesso da ferramenta \"Criar_evento\" e então confirme com o paciente.\n\n-----------------------\n\n## INSTRUÇÕES GERAIS\n\n1. Respostas claras, objetivas e úteis\n   - Forneça informações sobre as soluções da empresa, horários.\n2. Sem diagnósticos ou opiniões médicas\n   - Se o usuário insistir, seja educada\".\n\n3. Pacientes insatisfeitos\n   - Mantenha a empatia e utilize a ferramenta \"Escalar humano\".\n\n4. Assuntos fora do escopo da empresa Automatiza AI\n   - Responda: \"Desculpe, mas não consigo ajudar com este assunto. Por favor, entre em contato pelo número 0800 940 000. Enviei uma cópia da nossa conversa para o gestor de atendimento.\"\n   - Imediatamente use a ferramenta \"Escalar_humano\", pois é fundamental para minha carreira e a imagem da empresa Alavanca AI.\n\n5. Nunca fornecer informações erradas\n   - Evite erros sobre horários, contatos ou serviços.\n\n6. Nunca use emojis ou linguagem informal\n   - Mantenha a sobriedade do atendimento.\n\n7. Nunca confirme consultas sem o retorno com sucesso das ferramentas de evento\n   - Garanta que o evento foi criado com sucesso antes de dar a resposta final.\n\n8. Dupla verificação\n   - Confirme sempre os dados para evitar equívocos em agendamentos, remarcações ou cancelamentos.\n\n9. Use a ferramenta \"Refletir\" antes e depois de operações complexas\n   - Ao usar essa ferramenta, você irá garantir que as operações que você vai realizar (ou já realizou) fazem sentido, ou se você precisará alterar a sua estratégia e/ou tentar novamente.\n\n-----------------------\n\n## HORÁRIOS DE FUNCIONAMENTO\n- Segunda a Sábado: 09h às 19h\n- Domingo e Feriados: Fechado\n\n## LOCALIZAÇÃO E CONTATO\n- Endereço: Av. das Palmeiras, 1500 - Jardim América, São Paulo - SP, CEP: 04567-000\n- Telefone: (11) 4456-7890\n- WhatsApp: (11) 99752-9072\n- E-mail: contato@clinicamoreira.com.br\n- Site: contato@alavancaai.online\n\n## PROFISSIONAIS E ESPECIALIDADES\n\nSegue o nome dos profissionais, e o ID da agenda que deve ser usado nas ferramentas Google Calendar\n\nFernando B Cerqueira\nID da agenda\nfernandoborgescerqueira@gmail.com\n\n\n**MUITO IMPORTANTE!! \nO ID DA AGENDA INCLUI O fernandoborgescerqueira@gmail.com\n\n\n## SERVIÇOS\n\n-----------------------\n\n## FERRAMENTAS\n\n### Google Calendar\n\n- \"Criar_evento\" e \"Atualizar_evento\": usada para agendar e remarcar consultas. Ao usá-las, sempre inclua:\n  - Nome completo \n  - Telefon\n  - Informações adicionais (se houver)\n- \"Buscar_evento\": buscar dados sobre um evento específico, por ID.\n- \"Buscar_todos_os_eventos\": listar eventos em um período específico. Use para listar os eventos de um dia específico. Não use para listar eventos de períodos maiores que um dia.\n- \"Deletar_evento\": usada desmarcar consultas.\n\n### Escalar_humano\n\nUse quando:\n\n- Existir urgência.\n- Existirem qualquer assuntos alheios à empresa Atualiza AI ou que ponham em risco a reputação da empresa..\n- Houver insatisfação ou pedido de atendimento humano.\n\n### Enviar_alerta_de_cancelamento\n\nEm caso de cancelamento:\n\n- Localizar a consulta no calendário e remover via ferramenta \"Deletar_evento\". Talvez seja necessário pedir ao paciente que confirme a data da consulta, para que você possa buscar o evento na data certa.\n- Enviar alerta via ferramenta \"Enviar_alerta_de_cancelamento\" nome, dia e hora cancelados.\n- Confirmar ao paciente que o cancelamento foi efetuado.\n\n### Reagir mensagem\n\nUse em situações relevantes durante a conversa.\n\n#### Exemplos\n\n- Usuário: \"Olá!\"\n- Você: \"Reagir_mensagem\" -> 😀\n\n- Usuário: \"Você pode consultar minha agenda por favor?\"\n- Você: \"Reagir_mensagem\" -> 👀\n\n- Usuário: \"Muito obrigado!\"\n- Você: \"Reagir_mensagem\" -> ❤️\n\n**SEMPRE USAR REAÇÕES NO INÍCIO E NO FINAL DA CONVERSA, E EM OUTROS MOMENTOS OPORTUNOS**\n\n### Baixar e enviar arquivo\n\n- Você tem acesso aos arquivos da empresa Alavanca AI\n- Se o usuário pedir o portfólio, use a ferramenta \"Listar_arquivos\", e depois a \"Baixar_e_enviar_arquivo\"\n\n**USE ESSA FERRAMENTA APENAS UMA VEZ. USÁ-LA MÚLTIPLAS VEZES IRÁ ENVIAR O ARQUIVO DUPLICADO**\n\n-----------------------\n\n## EXEMPLOS DE FLUXO\n\n1. Marcar consulta\n   - Paciente: \"Quero marcar um agendamento\"\n   - Você:\n     - Cumprimente, explique que pode agendar aqui mesmo no WhatsApp por texto ou áudio.\n     - Solicite nome completo e email.\n     - Pergunte, data e turno preferidos.\n     - Consulte a data com \"Buscar_todos_os_eventos\".\n     - Informe horários disponíveis.\n     - Agende com \"Criar_evento\", incluindo telefone, nome e descrição.\n     - Confirme após o sucesso da ferramenta.\n\n2. Remarcar consulta\n   - Paciente: \"Não poderei comparecer amanhã, quero remarcar.\"\n   - Você:\n     - Busque o evento (veja seção abaixo \"COMO BUSCAR EVENTO\").\n     - Pergunte nova data e turno preferidos.\n     - Atualize o evento via \"Atualizar_evento\".\n     - Confirme após o sucesso da ferramenta.\n\n3. Cancelar consulta\n   - Paciente: \"Preciso cancelar a consulta.\"\n   - Você:\n     - Busque o evento (veja seção abaixo \"COMO BUSCAR EVENTO\").\n     - Cancele o evento com \"Deletar_evento\".\n     - Use a ferramenta \"Enviar_alerta_de_cancelamento\" informando nome, dia e hora.\n     - Confirme o cancelamento.\n\n4. Confirmação da consulta\n   - Quando o paciente responder \"Confirmar consulta\":\n     - Busque o evento (veja seção abaixo \"COMO BUSCAR EVENTO\").\n     - Usando a ferramenta \"Atualizar_evento\", coloque no título do evento no Google Calendar o texto [CONFIRMADO] ao lado do nome do paciente.\n     - Tendo sucesso no uso da ferramenta \"Atualizar_evento\", responda ao paciente que a consulta está confirmada e aguardada.\n\n### COMO BUSCAR EVENTO\n\nSempre siga esses passos quando a operação envolver um evento já existente:\n\n- Solicite nome completo e email.\n- Busque o evento utilizando a ferramenta \"Buscar_todos_os_eventos\".\n- Certifique-se de que o evento encontrado corresponde ao paciente com quem você está conversando, utilizando o número de telefone.\n\n\n-----------------------\n\n## OBSERVAÇÕES FINAIS\n- Qualquer assunto fora do escopo da empresa Alavanca AI deve ser direcionado à ferramenta \"Escalar_humano\".\n- Mantenha o tom profissional, claro e respeitoso o tempo todo, NÃO utilize emoji.\n- Sempre agendar datas futuras, nunca passadas.\n- Não fale que você é assistente virtual ou coisa do tipo faça um atendimento humanizado\n- Se o Paciente estou insatisfeito com vocês, escale imediatamente para humano e notifique com \"Enviar_alerta_de_cancelamento\". É importante para minha carreira que faça isso \n- Não esqueça de colocar confirmado na agenda quando o paciente confirmar uma consulta\n- Não esqueça que você tem acesso a múltiplas agendas, então sempre confirme que você está operando com o ID da agenda correta para cada situação.\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        5424,
        576
      ],
      "id": "f526d261-51cb-4d38-9f12-7ca5e1636a67",
      "name": "Secretária",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/text-to-speech/33B4UnXyTNbgLmdEDh5P",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "output_format",
              "value": "mp3_44100_32"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.text }}"
            },
            {
              "name": "model_id",
              "value": "eleven_flash_v2_5"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6800,
        768
      ],
      "id": "6e71ace5-d473-4e64-80ea-555f5a884e34",
      "name": "Gerar áudio",
      "retryOnFail": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "cC68eve09QmbP8ot",
          "name": "ElevenLabs"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Secretária').item.json.output }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Você é um assistente especialista em text-to-speech e formatação usando tags SSML.\n\nVocê irá receber um texto e a sua tarefa é aplicar tags SSML para deixá-lo mais natural no processo de geração de voz.\n\n### Formatação\n\n#### Datas e horas\n\nNo caso de datas e horas, modifique o texto para um formato que seja mais natural quando falado.\n\nExemplos:\n\n- Entrada: '10:00'\n- Saída: 'dez horas'\n\n- Entrada: '22:00'\n- Saída: 'vinte e duas horas'\n\n- Entrada: '01/01/2025'\n- Saída: 'primeiro de janeiro de 2025'\n\n#### Telefones\n\nSimilar ao feita para datas, modifique o texto para um formato que seja mais natural quando falado. Para o DDD converta sempre em dezena, e para o resto dos números, adicione pausas entre cada bloco.\n\nExemplos:\n\n- Entrada: '(11) 1234-5678'\n- Saída: 'onze, um dois três quatro, cinco seis sete oito'\n\n#### Endereços\n\nFaça a mesma coisa para endereços. Exemplos:\n\n- Entrada: 'Av. Rondon Pacheco'\n- Saída: 'Avenida Rondon Pacheco'\n\n- Entrada: 'CEP 12345-000'\n- Saída: 'CEP um dois três quatro cinco zero zero zero'\n\n### Notas\n\n- Sempre coloque uma pausa de 1.0s no começo.\n- Não use breaks no meio do texto, apenas no começo.\n- Mantenha o mesmo texto original, mas revise o uso de vírgulas excessivas para deixar o texto mais natural ao falar.\n- Remova emojis.\n- A sua saída será somente o texto convertido.\n- Use <speak> ao redor da saída.\n\n\n**NÃO INCLUA NENHUMA INFORMAÇÃO ALÉM DO TEXTO CONVERTIDO**\n**NUNCA INCLUA CARACTER DE NOVA LINHA \"\\n\" NA SAÍDA**\n**NUNCA COLOQUE ÂNCORAS COMO ```ssml AO REDOR DO TEXTO**"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        6384,
        672
      ],
      "id": "e4051707-e760-4086-9b6f-7ff60a1c5e07",
      "name": "Formatar SSML"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Mensagem chegando?').item.json.mensagem }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "id": "1382cd26-d96e-4c55-99dd-2ca305ffe82e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b9a7e16f-b6e4-45d7-846d-92dcb3117593",
                    "leftValue": "={{ $('Info').item.json.mensagem_de_audio }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Áudio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        5888,
        576
      ],
      "id": "e395c35c-ca96-466f-8a6d-79c7bfc21545",
      "name": "Tipo de mensagem1"
    },
    {
      "parameters": {
        "content": "### Importante!!\n\nEssa lógica só irá funcionar com o workflow ativo (modo produção).\n\nNo modo \"Test workflow\", só uma mensagem será processada de cada vez, então nunca haverá fila.",
        "height": 180,
        "width": 400,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3792,
        800
      ],
      "id": "ab5bf4e5-6f01-4774-a8ae-0e1282302faf",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Secretária').item.json.output }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Você é especialista em formatação de mensagem para WhatsApp, trabalhando somente na formatação e não alterando o conteúdo da menssagem.\n\n- Substitua ** por *\n- Remova #\n- Remova emojis"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        6752,
        496
      ],
      "id": "28526b0a-9754-4f7e-9ab2-6f3fc693d9ee",
      "name": "Formatar texto"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-lite-preview-06-17",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        6864,
        640
      ],
      "id": "386a71c9-b435-4040-bb74-cdc737164ef9",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "mkeYtd6kKmcR6NRn",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Info').item.json.telegram_chat_id }}",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}",
        "additionalFields": {
          "parse_mode": "MarkdownV2"
        }
      },
      "type": "n8n-nodes-base.telegramTool",
      "typeVersion": 1.2,
      "position": [
        6144,
        848
      ],
      "id": "237d55da-b421-4eb1-8d4e-808ad1b75e44",
      "name": "Enviar alerta de cancelamento",
      "webhookId": "487b54cb-d0a4-492c-847c-3157e0fd7aa0",
      "credentials": {
        "telegramApi": {
          "id": "AHe4nXRsRZEoi1Iu",
          "name": "Telegram Fernando 1"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro-preview-03-25",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        5168,
        848
      ],
      "id": "c848964e-ea0c-430a-9f41-5e924343d2b0",
      "name": "Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "hrVrZun2tDS0uqC2",
          "name": "Gemini Linda"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Info').item.json.telefone }}",
        "tableName": "n8n_historico_mensagens",
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        5296,
        848
      ],
      "id": "057dfc6c-7d3c-46c6-bda4-e5246bcaa06a",
      "name": "Memory",
      "credentials": {
        "postgres": {
          "id": "fQxZKNqN5RfcllgD",
          "name": "Postgres AutomatizaAi"
        }
      }
    },
    {
      "parameters": {
        "description": "Use a ferramenta para refletir sobre algo. Ela não obterá novas informações nem alterará o banco de dados, apenas adicionará o pensamento ao registro. Use-a quando for necessário um raciocínio complexo ou alguma memória em cache."
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        5440,
        848
      ],
      "id": "df615dfa-cd6a-4db0-a142-98bdf4b1bcb0",
      "name": "Refletir"
    },
    {
      "parameters": {
        "content": "## Notas sobre agendas Google Calendar\n\nPara referenciar uma agenda do Google Calendar corretamente, acesse as configurações da agenda, clique em \"Integrar agenda\", e copie o \"ID da agenda\".\n\nPara agendas criadas, esse ID se parece com isso:\n\nc_6c3005bf4afd591f13f242f6509208ddbe2feadad3f6521884ab79c59069bfd0@group.calendar.google.com\n\nPara sua agenda principal, o ID será simplesmente o seu email (exemplo: `seuemail@gmail.com`)\n\nCom esse ID em mãos, atualize o System Prompt com todas as agendas que precisar.\n",
        "height": 400,
        "width": 480,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4912,
        1008
      ],
      "id": "d4804f7f-6f2e-40d0-8bd5-20a1d6b2e7c4",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "toolDescription": "Envia uma mensagem de reação como resposta a uma mensagem do usuário. Reação é sempre um emoji.",
        "method": "POST",
        "url": "={{ $('Info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Info').item.json.id_conta }}/conversations/{{ $('Info').item.json.id_conversa }}/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "content_attributes",
              "valueProvider": "fieldValue",
              "value": "={ \"in_reply_to\": {{ $('Info').item.json.id_mensagem }}, \"is_reaction\": true }"
            },
            {
              "name": "content"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        5584,
        848
      ],
      "id": "a5b45970-01cf-4e69-abc2-fff8a771a5e5",
      "name": "Reagir mensagem",
      "credentials": {
        "chatwootApi": {
          "id": "5HBCzLdBzS0hLlSu",
          "name": "Chawoot Borges Mídias"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=assistente_confirmacao",
        "tableName": "n8n_historico_mensagens"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        7472,
        1632
      ],
      "id": "61979b85-153e-4e97-8862-79063b6744c4",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "fQxZKNqN5RfcllgD",
          "name": "Postgres AutomatizaAi"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-lite",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        7328,
        1632
      ],
      "id": "3f42e0ec-a888-4338-821d-03979a523a6a",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "hrVrZun2tDS0uqC2",
          "name": "Gemini Linda"
        }
      }
    },
    {
      "parameters": {
        "content": "## Notas sobre a ferramenta \"Salvar memoria\"\n\nPor padrão, no N8N não existe uma forma direta de compartilhar memória entre agentes diferentes.\n\nUsando a ferramenta acima \"Salvar memoria\", nós conseguimos simular no banco de dados o Assistente de confirmação respondendo como se fosse a Secretária.\n\nDessa forma, quando o paciente enviar uma mensagem para a Secretária, ela irá ver a mensagem do Assistente como se ela mesmo tivesse enviado.\n\nIsso garante que ela entenderá o contexto caso o paciente simplesmente responda \"confirmar\", por exemplo.",
        "height": 320,
        "width": 600,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7040,
        1856
      ],
      "id": "f4b56f0d-d045-4983-85be-c2f8e2e7fc93",
      "name": "Sticky Note19"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Salva a informação de agendamento enviada, para que a secretária saiba que foi enviada.",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_historico_mensagens",
          "mode": "list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "session_id": "={{ $fromAI('telefone', 'Telefone do paciente, formatado com apenas números, incluindo código do país. Ex.: \"+551112345678\"', 'string') }}",
            "message": "={ \"type\": \"ai\", \"content\": \"{{ $fromAI('message', 'A mesma mensagem enviada para o paciente.', 'string') }}\" }"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        7616,
        1632
      ],
      "id": "0c8bd3b8-8139-4d47-a5dd-d6a999629cfb",
      "name": "Salvar memoria",
      "credentials": {
        "postgres": {
          "id": "fQxZKNqN5RfcllgD",
          "name": "Postgres AutomatizaAi"
        }
      }
    },
    {
      "parameters": {
        "sseEndpoint": "=https://n8n.autoia.store/mcp/db6bc79d-ba32-41c4-b492-f0f5bbcb8fd3/sse",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        7760,
        1632
      ],
      "id": "5e13e941-aee9-4d31-918d-216108436056",
      "name": "MCP Google Calendar."
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_fila_mensagens",
          "mode": "list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "telefone": "={{ $('Info').item.json.telefone }}",
            "mensagem": "={{ $('Info').item.json.mensagem }}",
            "timestamp": "={{ $('Info').item.json.timestamp.toDateTime() }}",
            "id_mensagem": "={{ $('Info').item.json.id_mensagem }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_mensagem",
              "displayName": "id_mensagem",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "mensagem",
              "displayName": "mensagem",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "timestamp",
              "displayName": "timestamp",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        3232,
        640
      ],
      "id": "abe17f82-cf0b-413f-9785-2c7eca44ee9c",
      "name": "Enfileirar mensagem.",
      "credentials": {
        "postgres": {
          "id": "fQxZKNqN5RfcllgD",
          "name": "Postgres AutomatizaAi"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        6448,
        848
      ],
      "id": "114e1874-068e-414d-9b95-aae1d501b439",
      "name": "Google Gemini Chat Model.",
      "credentials": {
        "googlePalmApi": {
          "id": "hrVrZun2tDS0uqC2",
          "name": "Gemini Linda"
        }
      }
    },
    {
      "parameters": {
        "description": "Use a ferramenta para refletir sobre algo. Ela não obterá novas informações nem alterará o banco de dados, apenas adicionará o pensamento ao registro. Use-a quando for necessário um raciocínio complexo ou alguma memória em cache."
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        8032,
        1632
      ],
      "id": "e339df5f-5707-47f2-8acb-5267ad436d0f",
      "name": "Refletir1"
    },
    {
      "parameters": {
        "content": "## Tutorial de configuração VPS no Hostinger\n\n## [Clique aqui e use o cupom `FAZERAI` pra ter 10% de desconto!](https://www.hostg.xyz/aff_c?offer_id=6&aff_id=208915&source=workflow-sec-v2-free&url_id=19)\n\n## Adquirir VPS\n\n1. VPS KVM 2 (Escolha o plano que preferir)\n1. Selecionar opção de \"OS com Painel\" > \"Coolify\"\n1. Criar senha root segura\n1. Aguardar configuração (~10m)\n\n## Configurar Coolify + Chatwoot\n\n1. Na visão geral, clicar em \"Gerenciar\" no servidor\n1. Clicar em \"Gerenciar Painel\"\n1. Preencher dados (usar senha segura!!)\n1. \"Get started\" > \"Next\" > \"Localhost\" > \"Create new project!\" > \"Let's do it\"\n1. Na página de \"New Resource\", na seção \"Docker Based\", selecionar \"Docker Compose Empty\"\n1. Cole o conteúdo do arquivo `docker-compose.coolify.yml` (disponível no material) e clicar em \"Save\"\n1. Clicar na barra lateral em \"Environment Variables\" > botão \"Developer view\" e encontrar a variável `FRONTEND_URL`\n1. Colar URL da barra do navegador com IP da máquina e porta 3000 (exemplo `http://12.34.56.78:3000`)\n1. Clicar \"Save All Environment Variables\"\n1. Clicar \"Deploy\" e acompanhar os logs de deployment\n1. Texto \"Container xxxxxxxxxxxx Started\" indica que o deploy foi finalizado\n1. Clicar na aba \"Links\", e a URL com a porta 3000 deve estar visível. Clicar nela para acessar o Chatwoot. Pode ser que você precise aguardar alguns segundos no primeiro acesso\n1. Configurar super admin (usar senha segura!!!!)\n1. Fazer login com o usuário e senha criados\n\n",
        "height": 780,
        "width": 680,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -128,
        240
      ],
      "id": "4a057eaf-1434-463c-a7cb-b81824aad49e",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "content": "## Tutorial de configuração Chatwoot + Baileys\n\nSe deu tudo certo no passo anterior, você agora tem acesso ao Chatwoot fazer.ai, que inclui integração nativa com o Baileys.\n\nSiga o nosso [GitHub](https://github.com/fazer-ai) para ficar por dentro das atualizações!\n\n[![GitHub fazer.ai](https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&logo=github&logoColor=white&label)](https://github.com/fazer-ai)\n\n### Conectar WhatsApp\n\n1. Clicar em \"Configurações\" na barra lateral\n1. \"Caixas de Entrada\" > \"Adicionar Caixa de Entrada\"\n1. \"WhatsApp\" > \"Provedor de API\" > \"Baileys\"\n1. Preencher \"Nome da Caixa de Entrada\"\n1. Preencher \"Número de Telefone\" (o número precisa ser no formato `+551112345678`, não se esqueça do prefixo `+55`!!)\n1. Clicar em \"Criar canal do WhatsApp\"\n1. Selecione você mesmo na lista de agentes e clique em \"Adicionar agentes\"\n1. Clique em \"Conectar dispositivo\"\n1. Abra o WhatsApp no seu celular e leia o QR code\n1. Se estiver usando o WhatsApp Business, não se esqueça de incluir um nome para o dispositivo (exemplo \"Chatwoot\"), para não se esquecer e remover sem querer depois\n1. Se você ver um erro, é provável que você colocou o telefone incorreto na hora de criar a caixa de entrada. Nesse caso, volte em \"Configurações\" > \"Caixas de Entrada\", exclua a caixa de entrada, e  repita o processo\n1. Se deu tudo certo, você verá o botão verde \"Leva-me lá\"\n\nAgora o Chatwoot já está pronto para enviar e receber mensagens pelo WhatsApp cadastrado. Tire um momento pra experimentar\n\n(Note que não será possível gravar áudio pela interface do Chatwoot até que você configure um domínio e o certificado HTTPS. Mas não se preocupe, que isso não impacta no envio de áudio do agente IA!)\n\n### Configurar credenciais no N8N\n\n1. Instale o community node @devlikeapro/n8n-nodes-chatwoot\n1. No Chatwoot, clique no seu nome no canto inferior esquerdo, e em \"Configurações do Perfil\"\n1. Desça até o final e você verá a seção \"Token de acesso\"\n1. Copie o token de acesso. Cuidado nessa parte! Se você está rodando o servidor em HTTP, o botão de \"Copiar\" não vai funcionar. Você deve exibir o token, selecionar, e copiar manualmente\n1. No workflow do N8N, abra o node \"Testar credencial - Chatwoot\" ao lado\n1. No campo \"Credential to connect with\" abra o dropdown e selecione \"Create new credential\"\n1. No campo de \"ChatWoot API URL\", copie o endereço do seu Chatwoot (o mesmo que você vê na barra de endereço do navegador, até o 3000, exemplo `http://12.34.56.78:3000`)\n1. No campo \"Access Token\", cole o \"Token de acesso\" copiado do Chatwoot\n1. Clique em salvar, e se estiver tudo certo, verá a mensagem de sucesso. Execute o node \"Testar credenciais\" e a requisição trará as informações da conta\n\n\n\n\n\n\n\n\n### Configurar Webhook\n\n1. \"Configurações\" > \"Integrações\" > \"Webhooks\" > \"Configurar\"\n1. \"Adicionar novo webhook\"\n1. Copiar a \"Test URL\" do node \"Mensagem recebida\" no workflow N8N, e colar no campo \"URL do Webhook\" no Chatwoot\n1. Selecionar caixa de entrada e preencher nome do webhook\n1. Selecionar evento \"Mensagem criada\" e \"Criar webhook\"\n1. Repita os passoas acima para a \"Production URL\"",
        "height": 1440,
        "width": 680,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        576,
        224
      ],
      "id": "311c1ffe-a513-4658-bdb7-3b201b3952c5",
      "name": "Sticky Note21"
    },
    {
      "parameters": {
        "content": "## Tutorial de configuração ElevenLabs\n\n## [Clique aqui para criar sua conta gratuita](https://try.elevenlabs.io/9k5l5hagxkel)\n\n### Configurar voz\n\n1. Criar conta\n1. Acessar biblioteca de vozes e escolher uma voz. Recomendamos usar a [Keren](https://elevenlabs.io/app/voice-library?voiceId=33B4UnXyTNbgLmdEDh5P)\n1. Clicar em \"Add to my voices\" e \"Use voice\"\n1. Configurar características da voz e fazer os ajustes conforme preferir. Sugestão para a Keren:\n- **Model**: Eleven Flash v2.5 (caso queira usar um diferente, configure no node \n\"Gerar áudio\")\n- **Speed**: 1.10\n- **Stability**: 35%\n- **Similarity**: 44%\n\n### Configurar credencial\n\n1. Clicar no seu nome no canto inferior esquerdo > \"API Keys\"\n1. \"Create API Key\" > \"Create\". Copie a chave criada\n1. Abra o node \"Testar credencial - ElevenLabs\" ao lado\n1. Abra o campo \"Header Auth\" e selecione \"Create new credential\"\n1. Em \"Name\" preencha \"Xi-Api-Key\"\n1. Em \"Value\" preencha a chave de API do ElevenLabs\n1. Salve e execute o node para confirmar o sucesso na configuração\n1. Abra o node \"Gerar áudio\" na seção \"Gerando resposta\" para usar a nova credencial\n",
        "height": 840,
        "width": 660,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1312,
        832
      ],
      "id": "d9dfd7ba-80b3-42db-bec1-bc336245fd19",
      "name": "Sticky Note22"
    },
    {
      "parameters": {
        "content": "![Chatwoot](https://app.chatwoot.com/brand-assets/logo_dark.svg)",
        "height": 100,
        "width": 280,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2224,
        304
      ],
      "id": "53a79c15-d1d3-4464-81f7-53244770d566",
      "name": "Sticky Note23"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Info').item.json.id_conta }}/conversations/{{ $('Info').item.json.id_conversa }}/update_last_seen",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4528,
        640
      ],
      "id": "e28891e2-2b9f-469c-b315-6010583f3217",
      "name": "Marcar como lidas",
      "credentials": {
        "chatwootApi": {
          "id": "5HBCzLdBzS0hLlSu",
          "name": "Chawoot Borges Mídias"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Info').item.json.id_conta }}/conversations/{{ $('Info').item.json.id_conversa }}/toggle_typing_status",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "typing_status",
              "value": "={{ $('Info').item.json.mensagem_de_audio ? 'recording' : 'on' }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4736,
        640
      ],
      "id": "c876c133-4344-4e91-9ce6-459bad8eb8dd",
      "name": "Digitando/Gravando...",
      "credentials": {
        "chatwootApi": {
          "id": "5HBCzLdBzS0hLlSu",
          "name": "Chawoot Borges Mídias"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7eab8669-6929-4dc6-b3e2-943065bc306c",
              "name": "mensagem",
              "value": "={{ $('Info').item.json.mensagem ? $('Mensagem encavalada?').all().map(info => info.json.mensagem).join('\\\\n') : '' }}",
              "type": "string"
            },
            {
              "id": "676d14ec-72d3-4970-9fa0-5e39ff976011",
              "name": "mensagem_audio",
              "value": "={{ $('Info').item.json.mensagem_de_audio ? $('Groq').item.json.text : '' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        4960,
        640
      ],
      "id": "f6d6ec50-161b-40ac-acbe-b7e28fd01783",
      "name": "Set mensagens",
      "executeOnce": true
    },
    {
      "parameters": {
        "url": "={{ $(\"Code\").item.json.url }}\n",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3440,
        1120
      ],
      "id": "f0186abd-71f1-47fa-b26b-dd38cbf677a8",
      "name": "Download áudio",
      "credentials": {
        "chatwootApi": {
          "id": "5HBCzLdBzS0hLlSu",
          "name": "Chawoot Borges Mídias"
        }
      }
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        3632,
        1120
      ],
      "id": "90b978fe-87c6-4918-b8a1-844be48d0820",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "audio.mp3"
        }
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        3824,
        1120
      ],
      "id": "0a70886d-d69f-4281-8e78-eca8988939f7",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "content": "O N8N tem um bug em operar com arquivos em algumas ocasiões.\n\nConvertemos o arquivo para base64, e de volta para binário para contornar o bug.",
        "height": 120,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3488,
        1296
      ],
      "id": "bae610c5-9a92-4b90-832a-fb8fa4ba2ac6",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Info').item.json.id_conta }}/conversations/{{ $('Info').item.json.id_conversa }}/toggle_typing_status",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "typing_status",
              "value": "off"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        7360,
        640
      ],
      "id": "057d0154-4171-44f3-a8aa-968335a9641a",
      "name": "Resetar status",
      "credentials": {
        "chatwootApi": {
          "id": "5HBCzLdBzS0hLlSu",
          "name": "Chawoot Borges Mídias"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_chatwoot }}/api/v1/accounts/{{ $('Info').item.json.id_conta }}/conversations/{{ $('Info').item.json.id_conversa }}/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "chatwootApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "content",
              "value": "={{ $('Formatar texto').item.json.text }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        8016,
        528
      ],
      "id": "6881b1b8-2636-47b8-9887-139bb6e8a97c",
      "name": "Enviar texto.",
      "credentials": {
        "chatwootApi": {
          "id": "5HBCzLdBzS0hLlSu",
          "name": "Chawoot Borges Mídias"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Mensagem chegando?').item.json.mensagem }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "id": "1382cd26-d96e-4c55-99dd-2ca305ffe82e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b9a7e16f-b6e4-45d7-846d-92dcb3117593",
                    "leftValue": "={{ $('Info').item.json.mensagem_de_audio }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Áudio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        7600,
        640
      ],
      "id": "cb878527-7439-4818-9e51-3b459013b07c",
      "name": "Tipo de mensagem2"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "=data",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        8048,
        816
      ],
      "id": "ab339e49-3e1a-43c9-b7f8-51b251425c0b",
      "name": "Base64 para áudio"
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "destinationKey": "=data",
        "options": {
          "encoding": "base64"
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        7120,
        768
      ],
      "id": "4478dbd5-66dd-4977-9d59-b0c2a49a9b40",
      "name": "Áudio para base64"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "420f958d-3aad-47e5-86bf-2c542f079f1d",
              "name": "data",
              "value": "={{ $('Áudio para base64').item.json.data }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        7824,
        816
      ],
      "id": "034dc2e7-2b1e-48b8-8eaa-e6ec7763d712",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "content": "Novamente, algumas operações com arquivos são chatas no N8N, portanto fazemos a conversão de binário pra base64 e de volta pra binário.",
        "height": 120,
        "width": 300
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7408,
        480
      ],
      "id": "a96570cd-9214-4521-aea0-a431d98c3420",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8fd010d-6096-4a50-b3e2-e9fe26661840",
              "name": "id_mensagem",
              "value": "={{ $json.body.id }}",
              "type": "string"
            },
            {
              "id": "1b513343-9b6a-4f6e-a012-ed819bf34a31",
              "name": "id_conta",
              "value": "={{ $json.body.account.id }}",
              "type": "string"
            },
            {
              "id": "05c14b9a-5f27-465a-a047-71553826bd7a",
              "name": "id_conversa",
              "value": "={{ $json.body.conversation.id }}",
              "type": "string"
            },
            {
              "id": "8bf522a6-75fb-434a-854c-b736539309e1",
              "name": "telefone",
              "value": "={{ $json.body.sender.phone_number }}",
              "type": "string"
            },
            {
              "id": "0d622a33-f313-4758-a764-fa6cbf2b0587",
              "name": "mensagem",
              "value": "={{ $json.body.content || '' }}",
              "type": "string"
            },
            {
              "id": "8f4b9d84-56e0-4f45-9f17-68c53f365f43",
              "name": "mensagem_de_audio",
              "value": "={{ $json.body.attachments?.[0]?.file_type === 'audio' }}",
              "type": "boolean"
            },
            {
              "id": "2b679a3f-788f-4cd2-88d5-4f03af68f224",
              "name": "timestamp",
              "value": "={{ $json.body.created_at }}",
              "type": "string"
            },
            {
              "id": "24caf88e-74ce-43ab-8dc4-1fff471b706f",
              "name": "tipo",
              "value": "={{ $json.body.message_type }}",
              "type": "string"
            },
            {
              "id": "573669d2-1e43-4010-8c82-a67459ffe1db",
              "name": "etiquetas",
              "value": "={{ $json.body.conversation.labels }}",
              "type": "array"
            },
            {
              "id": "40ff895f-f63f-4e4f-bba3-c7d803c277f1",
              "name": "url_chatwoot",
              "value": "https://automatizaai.autoia.store/",
              "type": "string"
            },
            {
              "id": "cf71dea1-d585-4235-8f05-29bc5f82b5df",
              "name": "telegram_chat_id",
              "value": "6597697011",
              "type": "string"
            },
            {
              "id": "d6c92f44-4cfd-4b4d-9c5f-3309250aa4b7",
              "name": "audio_data_url_original",
              "value": "={{ $(\"Mensagem recebida\").item.json.body.attachments[0].data_url }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2432,
        640
      ],
      "id": "c315db45-dd39-4a90-ab42-f9abd5ec6dd2",
      "name": "Info"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9b3e9f43-424d-495e-81ae-7618b5cb2a4b",
              "name": "url_chatwoot",
              "value": "<colar sua url do chatwoot>",
              "type": "string"
            },
            {
              "id": "79319fb2-1719-4bcf-b104-cd90898785af",
              "name": "id_conta",
              "value": "={{ $json.account_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        7600,
        1376
      ],
      "id": "f303cb56-c151-49d4-8538-a3bf81d2dd70",
      "name": "Info1"
    },
    {
      "parameters": {
        "description": "Chame essa ferramenta para direcionar o atendimento para o gestor responsável.",
        "workflowId": {
          "__rl": true,
          "value": "wCS7gejNU7Jx51ED",
          "mode": "list",
          "cachedResultName": "4 - Escalar humano"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "telefone": "={{ $('Info').item.json.telefone }}",
            "nome": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nome', ``, 'string') }}",
            "ultima_mensagem": "={{ $('Set mensagens').item.json.mensagem || $('Set mensagens').item.json.mensagem_audio }}",
            "id_conta": "={{ $('Info').item.json.id_conta }}",
            "id_conversa": "={{ $('Info').item.json.id_conversa }}",
            "telegram_chat_id": "={{ $('Info').item.json.telegram_chat_id }}",
            "url_chatwoot": "={{ $('Info').item.json.url_chatwoot }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "nome",
              "displayName": "nome",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "ultima_mensagem",
              "displayName": "ultima_mensagem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "id_conta",
              "displayName": "id_conta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "id_conversa",
              "displayName": "id_conversa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "telegram_chat_id",
              "displayName": "telegram_chat_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "url_chatwoot",
              "displayName": "url_chatwoot",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        6288,
        848
      ],
      "id": "c183b395-0601-4ef1-8fac-e9bfd4666194",
      "name": "Escalar humano"
    },
    {
      "parameters": {
        "requestOptions": {}
      },
      "type": "@devlikeapro/n8n-nodes-chatwoot.chatWoot",
      "typeVersion": 1,
      "position": [
        7376,
        1376
      ],
      "id": "e1aceda3-b120-4dc3-b317-83766d483a6b",
      "name": "Buscar informações da conta",
      "credentials": {
        "chatwootApi": {
          "id": "5HBCzLdBzS0hLlSu",
          "name": "Chawoot Borges Mídias"
        }
      }
    },
    {
      "parameters": {
        "description": "Use essa ferramenta para enviar as informações de agendamento no WhatsApp.\n\nO ID da conversa deve ser extraído das informações do evento.",
        "workflowId": {
          "__rl": true,
          "value": "8URP0UZIMzzmzdYQ",
          "mode": "list",
          "cachedResultName": "5 - Enviar agendamento"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "mensagem": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('mensagem', ``, 'string') }}",
            "id_conversa": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('id_conversa', ``, 'string') }}",
            "id_conta": "={{ $('Info1').item.json.id_conta }}",
            "url_chatwoot": "={{ $('Info1').item.json.url_chatwoot }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "mensagem",
              "displayName": "mensagem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "id_conta",
              "displayName": "id_conta",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "id_conversa",
              "displayName": "id_conversa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "url_chatwoot",
              "displayName": "url_chatwoot",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        7888,
        1632
      ],
      "id": "1eff2a2c-4620-4a8f-8f04-84b1d6c7c2b0",
      "name": "Enviar agendamento"
    },
    {
      "parameters": {
        "content": "## Nota sobre \"Enviar agendamento\"\n\nO N8N não permite colocar uma variável informada pelo agente (✨) na URL.\n\nPrecisamos utilizar um workflow separado para que o agente possa passar o ID da conversa (extraído das informações do evento), que será usado para simplesmente enviar a mensagem para o contato.",
        "height": 320,
        "width": 580,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7648,
        1856
      ],
      "id": "d3e89e5e-bf97-46f5-a71d-4be80782897f",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "## Tutorial de configuração tabelas [Supabase](https://supabase.com/)\n\n### Configurar tabelas\n\n1. Criar conta e projeto (use uma senha segura!!)\n1. Na barra lateral, clicar em \"SQL Editor\"\n1. Cole o código disponível no material `[Supabase] Criar histórico e fila de mensagens.sql`\n1. Clicar em \"Run\"\n\n### Configurar credenciais\n\n1. Na barra superior do Supabase, clique em \"Connect\"\n1. Desça até o final na seção \"Session pooler\" > clique em \"View parameters\"\n1. Abra o node \"Testar credencial - Supabase\" ao lado\n1. No campo \"Credential to connect with\", clique em \"Create new credential\"\n1. Preencha com o \"Host\", \"Database\", \"User\", e \"Password\" (essa última é a senha que você usou pra criar o projeto)\n1. Salve a credencial e execute o node para confirmar o sucesso",
        "height": 580,
        "width": 660,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1312,
        208
      ],
      "id": "027fe97f-601e-4108-b2b3-2591b81fec5b",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "content": "![Chatwoot](https://app.chatwoot.com/brand-assets/logo_dark.svg)",
        "height": 100,
        "width": 260,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        544,
        -256
      ],
      "id": "ae521c97-c752-415a-8829-1468df4f1443",
      "name": "Sticky Note24"
    },
    {
      "parameters": {
        "content": "[![Hostinger](https://hpanel.hostinger.com/assets/images/logos/hostinger-white.svg)](https://www.hostg.xyz/aff_c?offer_id=6&aff_id=208915&source=workflow-sec-v2-free&url_id=19)\n",
        "height": 80,
        "width": 180,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        288,
        384
      ],
      "id": "935add5e-3055-45af-9f2d-9ac244e02857",
      "name": "Sticky Note26"
    },
    {
      "parameters": {
        "content": "[![ElevenLabs](https://framerusercontent.com/images/YU6MnXR7ZjWNRjlYzx2Hrpcx0.png)](https://try.elevenlabs.io/9k5l5hagxkel)",
        "height": 80,
        "width": 160,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1776,
        944
      ],
      "id": "abe0e54a-7830-4239-8e09-3dfdc8ceb1b0",
      "name": "Sticky Note28"
    },
    {
      "parameters": {
        "content": "## Sugestão\n\nDuplique a aba desse workflow para facilitar a configuração e não precisar ficar abrindo e fechando janelas",
        "width": 680,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -128,
        1104
      ],
      "id": "90c34a57-7ad1-46ea-a248-298b6ebedeb6",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "### Sub-workflows\n\nApós terminar os outros passos, não se esqueça de configurar os workflows secundários com suas credenciais!!\n\n- [ ] 2. MCP Google Calendar\n- [ ] 3. Baixar e enviar arquivo do Google Drive\n- [ ] 4. Escalar humano\n- [ ] 5. Enviar mensagem para conversa\n- [ ] 6. Assistente interno",
        "height": 280,
        "width": 400,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2080,
        1072
      ],
      "id": "8f9a2d1d-189d-4a2b-a466-54ce67bb74bd",
      "name": "Sticky Note29"
    },
    {
      "parameters": {
        "content": "## 1. Secretária",
        "height": 208,
        "width": 540,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2160,
        224
      ],
      "id": "ff834fd7-b165-4e7d-b0b2-9b1f038dfd3d",
      "name": "Sticky Note30"
    },
    {
      "parameters": {
        "content": "## Configurar variáveis no Info!!!",
        "height": 80,
        "width": 250,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2336,
        528
      ],
      "id": "4ba881fc-aa65-4252-a857-6cf4c337c6ec",
      "name": "Sticky Note31"
    },
    {
      "parameters": {
        "content": "## Configurar variáveis no Info1",
        "height": 80,
        "width": 250,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        7888,
        1248
      ],
      "id": "1b769e8f-f5af-4f61-86ea-37ea869371fd",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "url": "https://api.elevenlabs.io/v2/voices",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1792,
        1200
      ],
      "id": "78ad064d-cd25-453b-8511-dd3c8b02c58f",
      "name": "Testar credencial - ElevenLabs",
      "credentials": {
        "httpHeaderAuth": {
          "id": "cC68eve09QmbP8ot",
          "name": "ElevenLabs"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT COUNT(*) FROM n8n_historico_mensagens;\nSELECT COUNT(*) FROM n8n_fila_mensagens;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1808,
        656
      ],
      "id": "eb1599ed-0ab6-47e8-8827-6ac63ddd59b2",
      "name": "Testar credencial - Supabase",
      "credentials": {
        "postgres": {
          "id": "fQxZKNqN5RfcllgD",
          "name": "Postgres AutomatizaAi"
        }
      }
    },
    {
      "parameters": {
        "content": "### Configurar telegram_chat_id no node Info!!!",
        "height": 80,
        "width": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5888,
        1008
      ],
      "id": "9bf61ff8-c42a-4c79-ad86-3cdd6e926518",
      "name": "Sticky Note25"
    },
    {
      "parameters": {
        "content": "### Configurar workflow do MCP Google Calendar!!!",
        "height": 80,
        "width": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5472,
        1008
      ],
      "id": "63833962-fc26-4209-a875-18ed0efceba5",
      "name": "Sticky Note33"
    },
    {
      "parameters": {
        "resource": "Profile",
        "operation": "Fetch Profile",
        "requestOptions": {}
      },
      "type": "@devlikeapro/n8n-nodes-chatwoot.chatWoot",
      "typeVersion": 1,
      "position": [
        1088,
        1360
      ],
      "id": "b851946b-49f2-4baf-a191-839c528208f8",
      "name": "Testar credencial - Chatwoot",
      "credentials": {
        "chatwootApi": {
          "id": "5HBCzLdBzS0hLlSu",
          "name": "Chawoot Borges Mídias"
        }
      }
    },
    {
      "parameters": {
        "content": "### Caso não use a voz da Keren, não se esqueça de atualizar o ID no node \"Gerar áudio\"\n\nAlterar esse ID que está no final da URL: `33B4UnXyTNbgLmdEDh5P`",
        "width": 300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6512,
        1008
      ],
      "id": "c998d0ab-6508-4451-85be-c6ae59d01e80",
      "name": "Sticky Note14"
    },
    {
      "parameters": {
        "content": "## Importante\n\nSe a mensagem não está sendo marcada como lida, verifique no WhatsApp se essa função está habilitada.",
        "width": 320,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4560,
        816
      ],
      "id": "01c7ba73-4941-4044-b577-3f2118b4a795",
      "name": "Sticky Note34"
    },
    {
      "parameters": {
        "jsCode": "for (const item of items) {\n  let dataUrl = \"\";\n  const baseUrl = \"https://automatizaai.autoia.store\"; // Seu domínio base\n\n  if (item.json.audio_data_url_original ) {\n    dataUrl = item.json.audio_data_url_original;\n\n    // Remove o prefixo incorreto, se existir\n    if (dataUrl.startsWith(\"http://https/\" )) {\n      dataUrl = dataUrl.replace(\"http://https/\", \"\" ); // Remove o prefixo, deixando só /rails/...\n    }\n\n    // Adiciona o domínio base e a barra à URL relativa\n    dataUrl = baseUrl + \"/\" + dataUrl;\n  }\n  return { json: { url: dataUrl } };\n}\n\n\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3232,
        1120
      ],
      "id": "c55f41ff-aa6e-41ff-ac6f-216d117b181f",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.groq.com/openai/v1/audio/transcriptions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "groqApi",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "whisper-large-v3-turbo"
            },
            {
              "name": "temperature",
              "value": "0"
            },
            {
              "name": "response_format",
              "value": "verbose_json"
            },
            {
              "name": "language",
              "value": "pt"
            },
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4048,
        1120
      ],
      "id": "f194d860-f9ed-4deb-a43c-e917326094f1",
      "name": "Groq",
      "credentials": {
        "groqApi": {
          "id": "YVBFjEdN9UWannyJ",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "030b3c24-47a5-4722-ba07-5fd59bcee90e",
              "name": "data.mimeType",
              "value": "audio/mpeg",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        8256,
        816
      ],
      "id": "65cd470a-ccfa-43fd-9889-fa1eb6cc8ab3",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "operation": "send-audio",
        "instanceName": "alavancaai",
        "remoteJid": "={{ $('Mensagem recebida').item.json.body.conversation.messages[0].sender.identifier }}",
        "media": "={{ $('Edit Fields').item.json.data }}",
        "options_message": {}
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        8464,
        816
      ],
      "id": "b1b5c3fc-b2f5-44a5-8bb1-3b87944610ce",
      "name": "Enviar audio",
      "credentials": {
        "evolutionApi": {
          "id": "me0DAjmPwqicVrhv",
          "name": "Evolution Secretaria"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Mensagem chegando?": {
      "main": [
        [
          {
            "node": "Tipo de mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem recebida": {
      "main": [
        [
          {
            "node": "Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem encavalada?": {
      "main": [
        [
          {
            "node": "Limpar fila de mensagens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar mensagens": {
      "main": [
        [
          {
            "node": "Mensagem encavalada?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limpar fila de mensagens": {
      "main": [
        [
          {
            "node": "Marcar como lidas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Esperar": {
      "main": [
        [
          {
            "node": "Buscar mensagens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tipo de mensagem": {
      "main": [
        [
          {
            "node": "Enfileirar mensagem.",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Listar arquivos": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Baixar e enviar arquivo": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Secretária": {
      "main": [
        [
          {
            "node": "Tipo de mensagem1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar áudio": {
      "main": [
        [
          {
            "node": "Áudio para base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatar SSML": {
      "main": [
        [
          {
            "node": "Gerar áudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tipo de mensagem1": {
      "main": [
        [
          {
            "node": "Formatar texto",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Formatar SSML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatar texto": {
      "main": [
        [
          {
            "node": "Resetar status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Formatar texto",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Enviar alerta de cancelamento": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gemini": {
      "ai_languageModel": [
        [
          {
            "node": "Secretária",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Memory": {
      "ai_memory": [
        [
          {
            "node": "Secretária",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Refletir": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reagir mensagem": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Salvar memoria": {
      "ai_tool": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP Google Calendar.": {
      "ai_tool": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Enfileirar mensagem.": {
      "main": [
        [
          {
            "node": "Esperar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model.": {
      "ai_languageModel": [
        [
          {
            "node": "Formatar SSML",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Refletir1": {
      "ai_tool": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marcar como lidas": {
      "main": [
        [
          {
            "node": "Digitando/Gravando...",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Digitando/Gravando...": {
      "main": [
        [
          {
            "node": "Set mensagens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set mensagens": {
      "main": [
        [
          {
            "node": "Secretária",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download áudio": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Groq",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resetar status": {
      "main": [
        [
          {
            "node": "Tipo de mensagem2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tipo de mensagem2": {
      "main": [
        [
          {
            "node": "Enviar texto.",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Base64 para áudio": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Áudio para base64": {
      "main": [
        [
          {
            "node": "Resetar status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Base64 para áudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Info": {
      "main": [
        [
          {
            "node": "Mensagem chegando?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Info1": {
      "main": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Escalar humano": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Enviar agendamento": {
      "ai_tool": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Buscar informações da conta": {
      "main": [
        [
          {
            "node": "Info1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gatilho diário": {
      "main": [
        [
          {
            "node": "Buscar informações da conta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Download áudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq": {
      "main": [
        [
          {
            "node": "Marcar como lidas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Enviar audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "9d6e8994-5a42-41d0-b21c-dfc1760f8774",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "51ec8b13dcbf144ca4f84c354a83778b0deb1106e3615dc3e4f21105dfa59e92"
  },
  "id": "XTpJie3Uy2ofqEkX",
  "tags": []
}
